name: CI Unit Test

on:
  push:
    branches:
      - main
  pull_request:
    branches: '**'

permissions:
  actions: read
  contents: read

jobs:
  install:
    runs-on: ubuntu-latest
    container:
      image: node:18-buster-slim
    services:
      postgres:
        image: postgres:13
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: ${{ vars.POSTGRES_DB }}
          POSTGRES_USER: ${{ vars.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ vars.POSTGRES_PASSWORD }}
        options: >-
          --health-cmd="pg_isready -U ${{ vars.POSTGRES_USER }}"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
      redis:
        image: redis
        ports:
          - 6379:6379
        options: --entrypoint redis-server
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'yarn'
      - name: Install dependencies
        run: yarn

      - name: Ensure npm cache directory exists
        run: mkdir -p ~/.npm

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-

  unit-test:
    runs-on: ubuntu-latest
    container:
      image: node:18-buster-slim
    needs: install
    strategy:
      matrix:
        command: [client, node-cast]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'yarn'
      - name: Install dependencies
        run: yarn

      - name: Ensure npm cache directory exists
        run: mkdir -p ~/.npm

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Check ${{ matrix.command }} lint
        env:
          POSTGRES_DB: ${{ vars.POSTGRES_DB }}
          POSTGRES_USER: ${{ vars.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ vars.POSTGRES_PASSWORD }}
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
        run: yarn nx test ${{ matrix.command}}
